/**
* XRF OAuth2 Token Introspection Request API
* XRF OAuth2 Authorization server, token introspection API 
*
* The version of the OpenAPI document: 1
* Contact: tolgaoa@vt.edu
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "JWKSKeyReq.h"
#include "Helpers.h"

#include <sstream>

namespace xrf::model
{

JWKSKeyReq::JWKSKeyReq()
{
    m_Keyid = "";
    
}

void JWKSKeyReq::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw xrf::helpers::ValidationException(msg.str());
    }
}

bool JWKSKeyReq::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool JWKSKeyReq::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "JWKSKeyReq" : pathPrefix;

        
    return success;
}

bool JWKSKeyReq::operator==(const JWKSKeyReq& rhs) const
{
    return
    
    
    (getKeyid() == rhs.getKeyid())
    
    
    ;
}

bool JWKSKeyReq::operator!=(const JWKSKeyReq& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const JWKSKeyReq& o)
{
    j = nlohmann::json();
    j["keyid"] = o.m_Keyid;
    
}

void from_json(const nlohmann::json& j, JWKSKeyReq& o)
{
    j.at("keyid").get_to(o.m_Keyid);
    
}

std::string JWKSKeyReq::getKeyid() const
{
    return m_Keyid;
}
void JWKSKeyReq::setKeyid(std::string const& value)
{
    m_Keyid = value;
}


} // namespace xrf::model

