/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ServiceName_anyOf.h"
#include "Helpers.h"
#include <stdexcept>
#include <sstream>

namespace org::openapitools::server::model
{

ServiceName_anyOf::ServiceName_anyOf()
{
    
}

void ServiceName_anyOf::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ServiceName_anyOf::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ServiceName_anyOf::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ServiceName_anyOf" : pathPrefix;

    
    if (m_value == ServiceName_anyOf::eServiceName_anyOf::INVALID_VALUE_OPENAPI_GENERATED)
    {
        success = false;
        msg << _pathPrefix << ": has no value;";
    }

    return success;
}

bool ServiceName_anyOf::operator==(const ServiceName_anyOf& rhs) const
{
    return
    getValue() == rhs.getValue()
    
    ;
}

bool ServiceName_anyOf::operator!=(const ServiceName_anyOf& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ServiceName_anyOf& o)
{
    j = nlohmann::json();
    
    switch (o.getValue())
    {
        case ServiceName_anyOf::eServiceName_anyOf::INVALID_VALUE_OPENAPI_GENERATED:
            j = "INVALID_VALUE_OPENAPI_GENERATED";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNRF_NFM:
            j = "nnrf-nfm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNRF_DISC:
            j = "nnrf-disc";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNRF_OAUTH2:
            j = "nnrf-oauth2";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_SDM:
            j = "nudm-sdm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_UECM:
            j = "nudm-uecm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_UEAU:
            j = "nudm-ueau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_EE:
            j = "nudm-ee";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_PP:
            j = "nudm-pp";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_NIDDAU:
            j = "nudm-niddau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_MT:
            j = "nudm-mt";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDM_SSAU:
            j = "nudm-ssau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_COMM:
            j = "namf-comm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_EVTS:
            j = "namf-evts";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_MT:
            j = "namf-mt";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_LOC:
            j = "namf-loc";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_MBS_COMM:
            j = "namf-mbs-comm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAMF_MBS_BC:
            j = "namf-mbs-bc";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSMF_PDUSESSION:
            j = "nsmf-pdusession";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSMF_EVENT_EXPOSURE:
            j = "nsmf-event-exposure";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSMF_NIDD:
            j = "nsmf-nidd";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAUSF_AUTH:
            j = "nausf-auth";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAUSF_SORPROTECTION:
            j = "nausf-sorprotection";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAUSF_UPUPROTECTION:
            j = "nausf-upuprotection";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNEF_PFDMANAGEMENT:
            j = "nnef-pfdmanagement";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNEF_SMCONTEXT:
            j = "nnef-smcontext";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNEF_EVENTEXPOSURE:
            j = "nnef-eventexposure";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_CP_PARAMETER_PROVISIONING:
            j = "3gpp-cp-parameter-provisioning";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_DEVICE_TRIGGERING:
            j = "3gpp-device-triggering";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_APPLYING_BDT_POLICY:
            j = "3gpp-applying-bdt-policy";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_TRAFFIC_INFLUENCE:
            j = "3gpp-traffic-influence";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_CHARGEABLE_PARTY:
            j = "3gpp-chargeable-party";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_AS_SESSION_WITH_QOS:
            j = "3gpp-as-session-with-qos";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_MSISDN_LESS_MO_SMS:
            j = "3gpp-msisdn-less-mo-sms";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_SERVICE_PARAMETER:
            j = "3gpp-service-parameter";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_NIDD_CONFIGURATION_TRIGGER:
            j = "3gpp-nidd-configuration-trigger";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_NIDD:
            j = "3gpp-nidd";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_ANALYTICSEXPOSURE:
            j = "3gpp-analyticsexposure";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_ECR_CONTROL:
            j = "3gpp-ecr-control";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_MO_LCS_NOTIFY:
            j = "3gpp-mo-lcs-notify";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_TIME_SYNC:
            j = "3gpp-time-sync";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_AM_INFLUENCE:
            j = "3gpp-am-influence";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_AM_POLICYAUTHORIZATION:
            j = "3gpp-am-policyauthorization";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_AKMA:
            j = "3gpp-akma";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_IPTVCONFIGURATION:
            j = "3gpp-iptvconfiguration";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_MBS_TMGI:
            j = "3gpp-mbs-tmgi";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::_3GPP_MBS_SESSION:
            j = "3gpp-mbs-session";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_AM_POLICY_CONTROL:
            j = "npcf-am-policy-control";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_SMPOLICYCONTROL:
            j = "npcf-smpolicycontrol";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_POLICYAUTHORIZATION:
            j = "npcf-policyauthorization";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_BDTPOLICYCONTROL:
            j = "npcf-bdtpolicycontrol";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_EVENTEXPOSURE:
            j = "npcf-eventexposure";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_UE_POLICY_CONTROL:
            j = "npcf-ue-policy-control";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NPCF_AM_POLICY_AUTHORIZATION:
            j = "npcf-am-policy-authorization";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSMSF_SMS:
            j = "nsmsf-sms";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNSSF_NSSELECTION:
            j = "nnssf-nsselection";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNSSF_NSSAIAVAILABILITY:
            j = "nnssf-nssaiavailability";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDR_DR:
            j = "nudr-dr";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDR_GROUP_ID_MAP:
            j = "nudr-group-id-map";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NLMF_LOC:
            j = "nlmf-loc";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::N5G_EIR_EIC:
            j = "n5g-eir-eic";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NBSF_MANAGEMENT:
            j = "nbsf-management";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NCHF_SPENDINGLIMITCONTROL:
            j = "nchf-spendinglimitcontrol";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NCHF_CONVERGEDCHARGING:
            j = "nchf-convergedcharging";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NCHF_OFFLINEONLYCHARGING:
            j = "nchf-offlineonlycharging";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNWDAF_EVENTSSUBSCRIPTION:
            j = "nnwdaf-eventssubscription";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNWDAF_ANALYTICSINFO:
            j = "nnwdaf-analyticsinfo";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNWDAF_DATAMANAGEMENT:
            j = "nnwdaf-datamanagement";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNWDAF_MLMODELPROVISION:
            j = "nnwdaf-mlmodelprovision";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NGMLC_LOC:
            j = "ngmlc-loc";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUCMF_PROVISIONING:
            j = "nucmf-provisioning";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUCMF_UECAPABILITYMANAGEMENT:
            j = "nucmf-uecapabilitymanagement";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_SDM:
            j = "nhss-sdm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_UECM:
            j = "nhss-uecm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_UEAU:
            j = "nhss-ueau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_EE:
            j = "nhss-ee";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_SDM:
            j = "nhss-ims-sdm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_UECM:
            j = "nhss-ims-uecm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_UEAU:
            j = "nhss-ims-ueau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_GBA_SDM:
            j = "nhss-gba-sdm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NHSS_GBA_UEAU:
            j = "nhss-gba-ueau";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSEPP_TELESCOPIC:
            j = "nsepp-telescopic";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSORAF_SOR:
            j = "nsoraf-sor";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NSPAF_SECURED_PACKET:
            j = "nspaf-secured-packet";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDSF_DR:
            j = "nudsf-dr";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NUDSF_TIMER:
            j = "nudsf-timer";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNSSAAF_NSSAA:
            j = "nnssaaf-nssaa";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NAANF_AKMA:
            j = "naanf-akma";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::N5GDDNMF_DISCOVERY:
            j = "n5gddnmf-discovery";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NMFAF_3DADM:
            j = "nmfaf-3dadm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NMFAF_3CADM:
            j = "nmfaf-3cadm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NEASDF_DNSCONTEXT:
            j = "neasdf-dnscontext";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NEASDF_BASELINEDNSPATTERN:
            j = "neasdf-baselinednspattern";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NDCCF_DM:
            j = "ndccf-dm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NDCCF_CM:
            j = "ndccf-cm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNSACF_NSAC:
            j = "nnsacf-nsac";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NNSACF_SLICE_EE:
            j = "nnsacf-slice-ee";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NMBSMF_TMGI:
            j = "nmbsmf-tmgi";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NMBSMF_MBSSESSION:
            j = "nmbsmf-mbssession";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NADRF_DM:
            j = "nadrf-dm";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NBSP_GBA:
            j = "nbsp-gba";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NTSCTSF_TIME_SYNC:
            j = "ntsctsf-time-sync";
            break;
        case ServiceName_anyOf::eServiceName_anyOf::NTSCTSF_QOS_TSCAI:
            j = "ntsctsf-qos-tscai";
            break;
    }
}

void from_json(const nlohmann::json& j, ServiceName_anyOf& o)
{
    
    auto s = j.get<std::string>();
    if (s == "nnrf-nfm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNRF_NFM);
    } 
    else if (s == "nnrf-disc") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNRF_DISC);
    } 
    else if (s == "nnrf-oauth2") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNRF_OAUTH2);
    } 
    else if (s == "nudm-sdm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_SDM);
    } 
    else if (s == "nudm-uecm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_UECM);
    } 
    else if (s == "nudm-ueau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_UEAU);
    } 
    else if (s == "nudm-ee") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_EE);
    } 
    else if (s == "nudm-pp") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_PP);
    } 
    else if (s == "nudm-niddau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_NIDDAU);
    } 
    else if (s == "nudm-mt") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_MT);
    } 
    else if (s == "nudm-ssau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDM_SSAU);
    } 
    else if (s == "namf-comm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_COMM);
    } 
    else if (s == "namf-evts") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_EVTS);
    } 
    else if (s == "namf-mt") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_MT);
    } 
    else if (s == "namf-loc") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_LOC);
    } 
    else if (s == "namf-mbs-comm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_MBS_COMM);
    } 
    else if (s == "namf-mbs-bc") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAMF_MBS_BC);
    } 
    else if (s == "nsmf-pdusession") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSMF_PDUSESSION);
    } 
    else if (s == "nsmf-event-exposure") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSMF_EVENT_EXPOSURE);
    } 
    else if (s == "nsmf-nidd") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSMF_NIDD);
    } 
    else if (s == "nausf-auth") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAUSF_AUTH);
    } 
    else if (s == "nausf-sorprotection") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAUSF_SORPROTECTION);
    } 
    else if (s == "nausf-upuprotection") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAUSF_UPUPROTECTION);
    } 
    else if (s == "nnef-pfdmanagement") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNEF_PFDMANAGEMENT);
    } 
    else if (s == "nnef-smcontext") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNEF_SMCONTEXT);
    } 
    else if (s == "nnef-eventexposure") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNEF_EVENTEXPOSURE);
    } 
    else if (s == "3gpp-cp-parameter-provisioning") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_CP_PARAMETER_PROVISIONING);
    } 
    else if (s == "3gpp-device-triggering") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_DEVICE_TRIGGERING);
    } 
    else if (s == "3gpp-applying-bdt-policy") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_APPLYING_BDT_POLICY);
    } 
    else if (s == "3gpp-traffic-influence") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_TRAFFIC_INFLUENCE);
    } 
    else if (s == "3gpp-chargeable-party") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_CHARGEABLE_PARTY);
    } 
    else if (s == "3gpp-as-session-with-qos") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_AS_SESSION_WITH_QOS);
    } 
    else if (s == "3gpp-msisdn-less-mo-sms") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_MSISDN_LESS_MO_SMS);
    } 
    else if (s == "3gpp-service-parameter") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_SERVICE_PARAMETER);
    } 
    else if (s == "3gpp-nidd-configuration-trigger") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_NIDD_CONFIGURATION_TRIGGER);
    } 
    else if (s == "3gpp-nidd") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_NIDD);
    } 
    else if (s == "3gpp-analyticsexposure") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_ANALYTICSEXPOSURE);
    } 
    else if (s == "3gpp-ecr-control") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_ECR_CONTROL);
    } 
    else if (s == "3gpp-mo-lcs-notify") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_MO_LCS_NOTIFY);
    } 
    else if (s == "3gpp-time-sync") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_TIME_SYNC);
    } 
    else if (s == "3gpp-am-influence") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_AM_INFLUENCE);
    } 
    else if (s == "3gpp-am-policyauthorization") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_AM_POLICYAUTHORIZATION);
    } 
    else if (s == "3gpp-akma") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_AKMA);
    } 
    else if (s == "3gpp-iptvconfiguration") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_IPTVCONFIGURATION);
    } 
    else if (s == "3gpp-mbs-tmgi") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_MBS_TMGI);
    } 
    else if (s == "3gpp-mbs-session") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::_3GPP_MBS_SESSION);
    } 
    else if (s == "npcf-am-policy-control") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_AM_POLICY_CONTROL);
    } 
    else if (s == "npcf-smpolicycontrol") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_SMPOLICYCONTROL);
    } 
    else if (s == "npcf-policyauthorization") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_POLICYAUTHORIZATION);
    } 
    else if (s == "npcf-bdtpolicycontrol") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_BDTPOLICYCONTROL);
    } 
    else if (s == "npcf-eventexposure") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_EVENTEXPOSURE);
    } 
    else if (s == "npcf-ue-policy-control") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_UE_POLICY_CONTROL);
    } 
    else if (s == "npcf-am-policy-authorization") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NPCF_AM_POLICY_AUTHORIZATION);
    } 
    else if (s == "nsmsf-sms") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSMSF_SMS);
    } 
    else if (s == "nnssf-nsselection") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNSSF_NSSELECTION);
    } 
    else if (s == "nnssf-nssaiavailability") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNSSF_NSSAIAVAILABILITY);
    } 
    else if (s == "nudr-dr") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDR_DR);
    } 
    else if (s == "nudr-group-id-map") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDR_GROUP_ID_MAP);
    } 
    else if (s == "nlmf-loc") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NLMF_LOC);
    } 
    else if (s == "n5g-eir-eic") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::N5G_EIR_EIC);
    } 
    else if (s == "nbsf-management") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NBSF_MANAGEMENT);
    } 
    else if (s == "nchf-spendinglimitcontrol") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NCHF_SPENDINGLIMITCONTROL);
    } 
    else if (s == "nchf-convergedcharging") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NCHF_CONVERGEDCHARGING);
    } 
    else if (s == "nchf-offlineonlycharging") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NCHF_OFFLINEONLYCHARGING);
    } 
    else if (s == "nnwdaf-eventssubscription") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNWDAF_EVENTSSUBSCRIPTION);
    } 
    else if (s == "nnwdaf-analyticsinfo") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNWDAF_ANALYTICSINFO);
    } 
    else if (s == "nnwdaf-datamanagement") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNWDAF_DATAMANAGEMENT);
    } 
    else if (s == "nnwdaf-mlmodelprovision") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNWDAF_MLMODELPROVISION);
    } 
    else if (s == "ngmlc-loc") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NGMLC_LOC);
    } 
    else if (s == "nucmf-provisioning") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUCMF_PROVISIONING);
    } 
    else if (s == "nucmf-uecapabilitymanagement") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUCMF_UECAPABILITYMANAGEMENT);
    } 
    else if (s == "nhss-sdm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_SDM);
    } 
    else if (s == "nhss-uecm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_UECM);
    } 
    else if (s == "nhss-ueau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_UEAU);
    } 
    else if (s == "nhss-ee") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_EE);
    } 
    else if (s == "nhss-ims-sdm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_SDM);
    } 
    else if (s == "nhss-ims-uecm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_UECM);
    } 
    else if (s == "nhss-ims-ueau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_IMS_UEAU);
    } 
    else if (s == "nhss-gba-sdm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_GBA_SDM);
    } 
    else if (s == "nhss-gba-ueau") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NHSS_GBA_UEAU);
    } 
    else if (s == "nsepp-telescopic") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSEPP_TELESCOPIC);
    } 
    else if (s == "nsoraf-sor") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSORAF_SOR);
    } 
    else if (s == "nspaf-secured-packet") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NSPAF_SECURED_PACKET);
    } 
    else if (s == "nudsf-dr") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDSF_DR);
    } 
    else if (s == "nudsf-timer") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NUDSF_TIMER);
    } 
    else if (s == "nnssaaf-nssaa") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNSSAAF_NSSAA);
    } 
    else if (s == "naanf-akma") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NAANF_AKMA);
    } 
    else if (s == "n5gddnmf-discovery") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::N5GDDNMF_DISCOVERY);
    } 
    else if (s == "nmfaf-3dadm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NMFAF_3DADM);
    } 
    else if (s == "nmfaf-3cadm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NMFAF_3CADM);
    } 
    else if (s == "neasdf-dnscontext") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NEASDF_DNSCONTEXT);
    } 
    else if (s == "neasdf-baselinednspattern") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NEASDF_BASELINEDNSPATTERN);
    } 
    else if (s == "ndccf-dm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NDCCF_DM);
    } 
    else if (s == "ndccf-cm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NDCCF_CM);
    } 
    else if (s == "nnsacf-nsac") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNSACF_NSAC);
    } 
    else if (s == "nnsacf-slice-ee") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NNSACF_SLICE_EE);
    } 
    else if (s == "nmbsmf-tmgi") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NMBSMF_TMGI);
    } 
    else if (s == "nmbsmf-mbssession") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NMBSMF_MBSSESSION);
    } 
    else if (s == "nadrf-dm") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NADRF_DM);
    } 
    else if (s == "nbsp-gba") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NBSP_GBA);
    } 
    else if (s == "ntsctsf-time-sync") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NTSCTSF_TIME_SYNC);
    } 
    else if (s == "ntsctsf-qos-tscai") {
     o.setValue(ServiceName_anyOf::eServiceName_anyOf::NTSCTSF_QOS_TSCAI);
    }  else {
     std::stringstream ss;
     ss << "Unexpected value " << s << " in json"
        << " cannot be converted to enum of type"
        << " ServiceName_anyOf::eServiceName_anyOf";
     throw std::invalid_argument(ss.str());
    } 

}

ServiceName_anyOf::eServiceName_anyOf ServiceName_anyOf::getValue() const
{
    return m_value;
}
void ServiceName_anyOf::setValue(ServiceName_anyOf::eServiceName_anyOf value)
{
    m_value = value;
}

} // namespace org::openapitools::server::model

