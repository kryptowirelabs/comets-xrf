/**
* NRF Bootstrapping
* NRF Bootstrapping. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.1.0-alpha.3
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Status.h
 *
 * Overal status of the NRF
 */

#ifndef Status_H_
#define Status_H_


#include "Status_anyOf.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Overal status of the NRF
/// </summary>
class  Status
{
public:
    Status();
    virtual ~Status() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const Status& rhs) const;
    bool operator!=(const Status& rhs) const;

    /////////////////////////////////////////////
    /// Status members


    Status_anyOf getValue() const;
    void setValue(Status_anyOf value);
    Status_anyOf::eStatus_anyOf getEnumValue() const;
    void setEnumValue(Status_anyOf::eStatus_anyOf value);
    friend void to_json(nlohmann::json& j, const Status& o);
    friend void from_json(const nlohmann::json& j, Status& o);
    friend void to_json(nlohmann::json& j, const Status_anyOf& o);
    friend void from_json(const nlohmann::json& j, Status_anyOf& o);
protected:
    Status_anyOf m_value;
};

} // namespace org::openapitools::server::model

#endif /* Status_H_ */
