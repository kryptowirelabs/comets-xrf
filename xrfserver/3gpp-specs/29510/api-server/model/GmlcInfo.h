/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GmlcInfo.h
 *
 * Information of a GMLC NF Instance
 */

#ifndef GmlcInfo_H_
#define GmlcInfo_H_


#include <string>
#include "ExternalClientType.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Information of a GMLC NF Instance
/// </summary>
class  GmlcInfo
{
public:
    GmlcInfo();
    virtual ~GmlcInfo() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const GmlcInfo& rhs) const;
    bool operator!=(const GmlcInfo& rhs) const;

    /////////////////////////////////////////////
    /// GmlcInfo members

    /// <summary>
    /// 
    /// </summary>
    std::vector<ExternalClientType> getServingClientTypes() const;
    void setServingClientTypes(std::vector<ExternalClientType> const& value);
    bool servingClientTypesIsSet() const;
    void unsetServingClientTypes();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string> getGmlcNumbers() const;
    void setGmlcNumbers(std::vector<std::string> const& value);
    bool gmlcNumbersIsSet() const;
    void unsetGmlcNumbers();

    friend void to_json(nlohmann::json& j, const GmlcInfo& o);
    friend void from_json(const nlohmann::json& j, GmlcInfo& o);
protected:
    std::vector<ExternalClientType> m_ServingClientTypes;
    bool m_ServingClientTypesIsSet;
    std::vector<std::string> m_GmlcNumbers;
    bool m_GmlcNumbersIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* GmlcInfo_H_ */
