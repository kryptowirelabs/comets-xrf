/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * PlmnId.h
 *
 * When PlmnId needs to be converted to string (e.g. when used in maps as key), the string shall be composed of three digits \&quot;mcc\&quot; followed by \&quot;-\&quot; and two or three digits \&quot;mnc\&quot;.
 */

#ifndef PlmnId_H_
#define PlmnId_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// When PlmnId needs to be converted to string (e.g. when used in maps as key), the string shall be composed of three digits \&quot;mcc\&quot; followed by \&quot;-\&quot; and two or three digits \&quot;mnc\&quot;.
/// </summary>
class  PlmnId
{
public:
    PlmnId();
    virtual ~PlmnId() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const PlmnId& rhs) const;
    bool operator!=(const PlmnId& rhs) const;

    /////////////////////////////////////////////
    /// PlmnId members

    /// <summary>
    /// Mobile Country Code part of the PLMN, comprising 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
    /// </summary>
    std::string getMcc() const;
    void setMcc(std::string const& value);
    /// <summary>
    /// Mobile Network Code part of the PLMN, comprising 2 or 3 digits, as defined in clause 9.3.3.5 of 3GPP TS 38.413.
    /// </summary>
    std::string getMnc() const;
    void setMnc(std::string const& value);

    friend void to_json(nlohmann::json& j, const PlmnId& o);
    friend void from_json(const nlohmann::json& j, PlmnId& o);
protected:
    std::string m_Mcc;

    std::string m_Mnc;

    
};

} // namespace org::openapitools::server::model

#endif /* PlmnId_H_ */
