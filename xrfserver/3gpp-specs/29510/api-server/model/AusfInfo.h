/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AusfInfo.h
 *
 * Information of an AUSF NF Instance
 */

#ifndef AusfInfo_H_
#define AusfInfo_H_


#include "SupiRange.h"
#include <string>
#include "SuciInfo.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Information of an AUSF NF Instance
/// </summary>
class  AusfInfo
{
public:
    AusfInfo();
    virtual ~AusfInfo() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AusfInfo& rhs) const;
    bool operator!=(const AusfInfo& rhs) const;

    /////////////////////////////////////////////
    /// AusfInfo members

    /// <summary>
    /// Identifier of a group of NFs.
    /// </summary>
    std::string getGroupId() const;
    void setGroupId(std::string const& value);
    bool groupIdIsSet() const;
    void unsetGroupId();
    /// <summary>
    /// 
    /// </summary>
    std::vector<SupiRange> getSupiRanges() const;
    void setSupiRanges(std::vector<SupiRange> const& value);
    bool supiRangesIsSet() const;
    void unsetSupiRanges();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string> getRoutingIndicators() const;
    void setRoutingIndicators(std::vector<std::string> const& value);
    bool routingIndicatorsIsSet() const;
    void unsetRoutingIndicators();
    /// <summary>
    /// 
    /// </summary>
    std::vector<SuciInfo> getSuciInfos() const;
    void setSuciInfos(std::vector<SuciInfo> const& value);
    bool suciInfosIsSet() const;
    void unsetSuciInfos();

    friend void to_json(nlohmann::json& j, const AusfInfo& o);
    friend void from_json(const nlohmann::json& j, AusfInfo& o);
protected:
    std::string m_GroupId;
    bool m_GroupIdIsSet;
    std::vector<SupiRange> m_SupiRanges;
    bool m_SupiRangesIsSet;
    std::vector<std::string> m_RoutingIndicators;
    bool m_RoutingIndicatorsIsSet;
    std::vector<SuciInfo> m_SuciInfos;
    bool m_SuciInfosIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* AusfInfo_H_ */
