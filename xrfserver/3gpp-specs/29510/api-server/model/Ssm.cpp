/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Ssm.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Ssm::Ssm()
{
    
}

void Ssm::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Ssm::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Ssm::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Ssm" : pathPrefix;

            
    return success;
}

bool Ssm::operator==(const Ssm& rhs) const
{
    return
    
    
    (getSourceIpAddr() == rhs.getSourceIpAddr())
     &&
    
    (getDestIpAddr() == rhs.getDestIpAddr())
    
    
    ;
}

bool Ssm::operator!=(const Ssm& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Ssm& o)
{
    j = nlohmann::json();
    j["sourceIpAddr"] = o.m_SourceIpAddr;
    j["destIpAddr"] = o.m_DestIpAddr;
    
}

void from_json(const nlohmann::json& j, Ssm& o)
{
    j.at("sourceIpAddr").get_to(o.m_SourceIpAddr);
    j.at("destIpAddr").get_to(o.m_DestIpAddr);
    
}

IpAddr Ssm::getSourceIpAddr() const
{
    return m_SourceIpAddr;
}
void Ssm::setSourceIpAddr(IpAddr const& value)
{
    m_SourceIpAddr = value;
}
IpAddr Ssm::getDestIpAddr() const
{
    return m_DestIpAddr;
}
void Ssm::setDestIpAddr(IpAddr const& value)
{
    m_DestIpAddr = value;
}


} // namespace org::openapitools::server::model

