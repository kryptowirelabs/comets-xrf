/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UriList.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

UriList::UriList()
{
    m__linksIsSet = false;
    m_TotalItemCount = 0;
    m_TotalItemCountIsSet = false;
    
}

void UriList::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool UriList::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool UriList::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "UriList" : pathPrefix;

         
    if (linksIsSet())
    {
        const std::map<std::string, LinksValueSchema>& value = m__links;
        const std::string currentValuePath = _pathPrefix + ".links";
                
        

    }
        
    return success;
}

bool UriList::operator==(const UriList& rhs) const
{
    return
    
    
    
    ((!linksIsSet() && !rhs.linksIsSet()) || (linksIsSet() && rhs.linksIsSet() && getLinks() == rhs.getLinks())) &&
    
    
    ((!totalItemCountIsSet() && !rhs.totalItemCountIsSet()) || (totalItemCountIsSet() && rhs.totalItemCountIsSet() && getTotalItemCount() == rhs.getTotalItemCount()))
    
    ;
}

bool UriList::operator!=(const UriList& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const UriList& o)
{
    j = nlohmann::json();
    if(o.linksIsSet() || !o.m__links.empty())
        j["_links"] = o.m__links;
    if(o.totalItemCountIsSet())
        j["totalItemCount"] = o.m_TotalItemCount;
    
}

void from_json(const nlohmann::json& j, UriList& o)
{
    if(j.find("_links") != j.end())
    {
        j.at("_links").get_to(o.m__links);
        o.m__linksIsSet = true;
    } 
    if(j.find("totalItemCount") != j.end())
    {
        j.at("totalItemCount").get_to(o.m_TotalItemCount);
        o.m_TotalItemCountIsSet = true;
    } 
    
}

std::map<std::string, LinksValueSchema> UriList::getLinks() const
{
    return m__links;
}
void UriList::setLinks(std::map<std::string, LinksValueSchema> const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool UriList::linksIsSet() const
{
    return m__linksIsSet;
}
void UriList::unset_links()
{
    m__linksIsSet = false;
}
int32_t UriList::getTotalItemCount() const
{
    return m_TotalItemCount;
}
void UriList::setTotalItemCount(int32_t const value)
{
    m_TotalItemCount = value;
    m_TotalItemCountIsSet = true;
}
bool UriList::totalItemCountIsSet() const
{
    return m_TotalItemCountIsSet;
}
void UriList::unsetTotalItemCount()
{
    m_TotalItemCountIsSet = false;
}


} // namespace org::openapitools::server::model

