/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "DnnMbSmfInfoItem.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

DnnMbSmfInfoItem::DnnMbSmfInfoItem()
{
    
}

void DnnMbSmfInfoItem::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool DnnMbSmfInfoItem::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool DnnMbSmfInfoItem::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "DnnMbSmfInfoItem" : pathPrefix;

        
    return success;
}

bool DnnMbSmfInfoItem::operator==(const DnnMbSmfInfoItem& rhs) const
{
    return
    
    
    (getDnn() == rhs.getDnn())
    
    
    ;
}

bool DnnMbSmfInfoItem::operator!=(const DnnMbSmfInfoItem& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const DnnMbSmfInfoItem& o)
{
    j = nlohmann::json();
    j["dnn"] = o.m_Dnn;
    
}

void from_json(const nlohmann::json& j, DnnMbSmfInfoItem& o)
{
    j.at("dnn").get_to(o.m_Dnn);
    
}

AnyOfstringstring DnnMbSmfInfoItem::getDnn() const
{
    return m_Dnn;
}
void DnnMbSmfInfoItem::setDnn(AnyOfstringstring const& value)
{
    m_Dnn = value;
}


} // namespace org::openapitools::server::model

