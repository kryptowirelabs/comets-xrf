/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * TsctsfInfo.h
 *
 * Information of a TSCTSF NF Instance
 */

#ifndef TsctsfInfo_H_
#define TsctsfInfo_H_


#include "IdentityRange.h"
#include "SnssaiTsctsfInfoItem.h"
#include <map>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Information of a TSCTSF NF Instance
/// </summary>
class  TsctsfInfo
{
public:
    TsctsfInfo();
    virtual ~TsctsfInfo() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const TsctsfInfo& rhs) const;
    bool operator!=(const TsctsfInfo& rhs) const;

    /////////////////////////////////////////////
    /// TsctsfInfo members

    /// <summary>
    /// A map (list of key-value pairs) where a valid JSON string serves as key
    /// </summary>
    std::map<std::string, SnssaiTsctsfInfoItem> getSNssaiInfoList() const;
    void setSNssaiInfoList(std::map<std::string, SnssaiTsctsfInfoItem> const& value);
    bool sNssaiInfoListIsSet() const;
    void unsetSNssaiInfoList();
    /// <summary>
    /// 
    /// </summary>
    std::vector<IdentityRange> getExternalGroupIdentifiersRanges() const;
    void setExternalGroupIdentifiersRanges(std::vector<IdentityRange> const& value);
    bool externalGroupIdentifiersRangesIsSet() const;
    void unsetExternalGroupIdentifiersRanges();

    friend void to_json(nlohmann::json& j, const TsctsfInfo& o);
    friend void from_json(const nlohmann::json& j, TsctsfInfo& o);
protected:
    std::map<std::string, SnssaiTsctsfInfoItem> m_SNssaiInfoList;
    bool m_SNssaiInfoListIsSet;
    std::vector<IdentityRange> m_ExternalGroupIdentifiersRanges;
    bool m_ExternalGroupIdentifiersRangesIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* TsctsfInfo_H_ */
