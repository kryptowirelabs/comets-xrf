/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ChangeItem.h
 *
 * It contains data which need to be changed.
 */

#ifndef ChangeItem_H_
#define ChangeItem_H_


#include "ChangeType.h"
#include <string>
#include "AnyType.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// It contains data which need to be changed.
/// </summary>
class  ChangeItem
{
public:
    ChangeItem();
    virtual ~ChangeItem() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ChangeItem& rhs) const;
    bool operator!=(const ChangeItem& rhs) const;

    /////////////////////////////////////////////
    /// ChangeItem members

    /// <summary>
    /// 
    /// </summary>
    ChangeType getOp() const;
    void setOp(ChangeType const& value);
    /// <summary>
    /// contains a JSON pointer value (as defined in IETF RFC 6901) that references a target location within the resource on which the change has been applied.
    /// </summary>
    std::string getPath() const;
    void setPath(std::string const& value);
    /// <summary>
    /// indicates the path of the source JSON element (according to JSON Pointer syntax) being moved or copied to the location indicated by the \&quot;path\&quot; attribute. It shall be present if the \&quot;op\&quot; attribute is of value \&quot;MOVE\&quot;.
    /// </summary>
    std::string getFrom() const;
    void setFrom(std::string const& value);
    bool fromIsSet() const;
    void unsetFrom();
    /// <summary>
    /// 
    /// </summary>
    AnyType getOrigValue() const;
    void setOrigValue(AnyType const& value);
    bool origValueIsSet() const;
    void unsetOrigValue();
    /// <summary>
    /// 
    /// </summary>
    AnyType getNewValue() const;
    void setNewValue(AnyType const& value);
    bool newValueIsSet() const;
    void unsetNewValue();

    friend void to_json(nlohmann::json& j, const ChangeItem& o);
    friend void from_json(const nlohmann::json& j, ChangeItem& o);
protected:
    ChangeType m_Op;

    std::string m_Path;

    std::string m_From;
    bool m_FromIsSet;
    AnyType m_OrigValue;
    bool m_OrigValueIsSet;
    AnyType m_NewValue;
    bool m_NewValueIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* ChangeItem_H_ */
