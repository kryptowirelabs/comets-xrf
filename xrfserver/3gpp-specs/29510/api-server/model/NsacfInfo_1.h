/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * NsacfInfo_1.h
 *
 * Information of a NSACF NF Instance
 */

#ifndef NsacfInfo_1_H_
#define NsacfInfo_1_H_


#include "NsacfCapability.h"
#include "Tai.h"
#include "TaiRange.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Information of a NSACF NF Instance
/// </summary>
class  NsacfInfo_1
{
public:
    NsacfInfo_1();
    virtual ~NsacfInfo_1() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const NsacfInfo_1& rhs) const;
    bool operator!=(const NsacfInfo_1& rhs) const;

    /////////////////////////////////////////////
    /// NsacfInfo_1 members

    /// <summary>
    /// 
    /// </summary>
    NsacfCapability getNsacfCapability() const;
    void setNsacfCapability(NsacfCapability const& value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<Tai> getTaiList() const;
    void setTaiList(std::vector<Tai> const& value);
    bool taiListIsSet() const;
    void unsetTaiList();
    /// <summary>
    /// 
    /// </summary>
    std::vector<TaiRange> getTaiRangeList() const;
    void setTaiRangeList(std::vector<TaiRange> const& value);
    bool taiRangeListIsSet() const;
    void unsetTaiRangeList();

    friend void to_json(nlohmann::json& j, const NsacfInfo_1& o);
    friend void from_json(const nlohmann::json& j, NsacfInfo_1& o);
protected:
    NsacfCapability m_NsacfCapability;

    std::vector<Tai> m_TaiList;
    bool m_TaiListIsSet;
    std::vector<TaiRange> m_TaiRangeList;
    bool m_TaiRangeListIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* NsacfInfo_1_H_ */
