/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UriList.h
 *
 * Represents a set of URIs following the 3GPP hypermedia format (containing a \&quot;_links\&quot; attribute).
 */

#ifndef UriList_H_
#define UriList_H_


#include "LinksValueSchema.h"
#include <map>
#include <vector>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Represents a set of URIs following the 3GPP hypermedia format (containing a \&quot;_links\&quot; attribute).
/// </summary>
class  UriList
{
public:
    UriList();
    virtual ~UriList() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const UriList& rhs) const;
    bool operator!=(const UriList& rhs) const;

    /////////////////////////////////////////////
    /// UriList members

    /// <summary>
    /// List of the URI of NF instances. It has two members whose names are item and self. The item attribute contains an array of URIs.&#39;
    /// </summary>
    std::map<std::string, LinksValueSchema> getLinks() const;
    void setLinks(std::map<std::string, LinksValueSchema> const& value);
    bool linksIsSet() const;
    void unset_links();
    /// <summary>
    /// 
    /// </summary>
    int32_t getTotalItemCount() const;
    void setTotalItemCount(int32_t const value);
    bool totalItemCountIsSet() const;
    void unsetTotalItemCount();

    friend void to_json(nlohmann::json& j, const UriList& o);
    friend void from_json(const nlohmann::json& j, UriList& o);
protected:
    std::map<std::string, LinksValueSchema> m__links;
    bool m__linksIsSet;
    int32_t m_TotalItemCount;
    bool m_TotalItemCountIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* UriList_H_ */
