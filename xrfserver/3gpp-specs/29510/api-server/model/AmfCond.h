/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AmfCond.h
 *
 * Subscription to a set of AMFs, based on AMF Set Id and/or AMF Region Id
 */

#ifndef AmfCond_H_
#define AmfCond_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// Subscription to a set of AMFs, based on AMF Set Id and/or AMF Region Id
/// </summary>
class  AmfCond
{
public:
    AmfCond();
    virtual ~AmfCond() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const AmfCond& rhs) const;
    bool operator!=(const AmfCond& rhs) const;

    /////////////////////////////////////////////
    /// AmfCond members

    /// <summary>
    /// String identifying the AMF Set ID (10 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of 3 hexadecimal characters where the first character is limited to values 0 to 3 (i.e. 10 bits)
    /// </summary>
    std::string getAmfSetId() const;
    void setAmfSetId(std::string const& value);
    bool amfSetIdIsSet() const;
    void unsetAmfSetId();
    /// <summary>
    /// String identifying the AMF Set ID (10 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of 3 hexadecimal characters where the first character is limited to values 0 to 3 (i.e. 10 bits)
    /// </summary>
    std::string getAmfRegionId() const;
    void setAmfRegionId(std::string const& value);
    bool amfRegionIdIsSet() const;
    void unsetAmfRegionId();

    friend void to_json(nlohmann::json& j, const AmfCond& o);
    friend void from_json(const nlohmann::json& j, AmfCond& o);
protected:
    std::string m_AmfSetId;
    bool m_AmfSetIdIsSet;
    std::string m_AmfRegionId;
    bool m_AmfRegionIdIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* AmfCond_H_ */
