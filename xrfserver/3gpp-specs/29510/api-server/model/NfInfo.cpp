/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "NfInfo.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

NfInfo::NfInfo()
{
    m_NfTypeIsSet = false;
    
}

void NfInfo::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool NfInfo::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool NfInfo::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "NfInfo" : pathPrefix;

        
    return success;
}

bool NfInfo::operator==(const NfInfo& rhs) const
{
    return
    
    
    
    ((!nfTypeIsSet() && !rhs.nfTypeIsSet()) || (nfTypeIsSet() && rhs.nfTypeIsSet() && getNfType() == rhs.getNfType()))
    
    ;
}

bool NfInfo::operator!=(const NfInfo& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const NfInfo& o)
{
    j = nlohmann::json();
    if(o.nfTypeIsSet())
        j["nfType"] = o.m_NfType;
    
}

void from_json(const nlohmann::json& j, NfInfo& o)
{
    if(j.find("nfType") != j.end())
    {
        j.at("nfType").get_to(o.m_NfType);
        o.m_NfTypeIsSet = true;
    } 
    
}

NFType NfInfo::getNfType() const
{
    return m_NfType;
}
void NfInfo::setNfType(NFType const& value)
{
    m_NfType = value;
    m_NfTypeIsSet = true;
}
bool NfInfo::nfTypeIsSet() const
{
    return m_NfTypeIsSet;
}
void NfInfo::unsetNfType()
{
    m_NfTypeIsSet = false;
}


} // namespace org::openapitools::server::model

