/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* NFInstanceIDDocumentApiImpl.h
*
* 
*/

#ifndef NF_INSTANCE_ID_DOCUMENT_API_IMPL_H_
#define NF_INSTANCE_ID_DOCUMENT_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <NFInstanceIDDocumentApi.h>

#include <pistache/optional.h>

#include "NFProfile.h"
#include "PatchItem.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include <string>
#include <vector>

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class NFInstanceIDDocumentApiImpl : public org::openapitools::server::api::NFInstanceIDDocumentApi {
public:
    explicit NFInstanceIDDocumentApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~NFInstanceIDDocumentApiImpl() override = default;

    void deregister_nf_instance(const std::string &nfInstanceID, Pistache::Http::ResponseWriter &response);
    void get_nf_instance(const std::string &nfInstanceID, const Pistache::Optional<std::string> &requesterFeatures, Pistache::Http::ResponseWriter &response);
    void register_nf_instance(const std::string &nfInstanceID, const NFProfile &nFProfile, const Pistache::Optional<Pistache::Http::Header::Raw> &contentEncoding, const Pistache::Optional<Pistache::Http::Header::Raw> &acceptEncoding, Pistache::Http::ResponseWriter &response);
    void update_nf_instance(const std::string &nfInstanceID, const std::vector<PatchItem> &patchItem, const Pistache::Optional<Pistache::Http::Header::Raw> &contentEncoding, const Pistache::Optional<Pistache::Http::Header::Raw> &acceptEncoding, const Pistache::Optional<Pistache::Http::Header::Raw> &ifMatch, Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
