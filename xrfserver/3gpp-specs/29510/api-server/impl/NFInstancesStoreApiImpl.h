/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.2.0-alpha.5
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* NFInstancesStoreApiImpl.h
*
* 
*/

#ifndef NF_INSTANCES_STORE_API_IMPL_H_
#define NF_INSTANCES_STORE_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <NFInstancesStoreApi.h>

#include <pistache/optional.h>

#include "NFType.h"
#include "OptionsResponse.h"
#include "ProblemDetails.h"
#include "RedirectResponse.h"
#include "UriList.h"

namespace org::openapitools::server::api
{

using namespace org::openapitools::server::model;

class NFInstancesStoreApiImpl : public org::openapitools::server::api::NFInstancesStoreApi {
public:
    explicit NFInstancesStoreApiImpl(const std::shared_ptr<Pistache::Rest::Router>& rtr);
    ~NFInstancesStoreApiImpl() override = default;

    void get_nf_instances(const Pistache::Optional<NFType> &nfType, const Pistache::Optional<int32_t> &limit, const Pistache::Optional<int32_t> &pageNumber, const Pistache::Optional<int32_t> &pageSize, Pistache::Http::ResponseWriter &response);
    void options_nf_instances(Pistache::Http::ResponseWriter &response);

};

} // namespace org::openapitools::server::api



#endif
