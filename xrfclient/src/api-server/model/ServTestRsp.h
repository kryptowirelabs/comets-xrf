/**
* XRFc Service test API
* XRFc service testing API 
*
* The version of the OpenAPI document: 1
* Contact: tolgaoa@vt.edu
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ServTestRsp.h
 *
 * Contains information related to the service test response
 */

#ifndef ServTestRsp_H_
#define ServTestRsp_H_


//#include "Null.h"
#include <nlohmann/json.hpp>

namespace xrf::model
{

/// <summary>
/// Contains information related to the service test response
/// </summary>
class  ServTestRsp
{
public:
    ServTestRsp();
    virtual ~ServTestRsp() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const ServTestRsp& rhs) const;
    bool operator!=(const ServTestRsp& rhs) const;

    /////////////////////////////////////////////
    /// ServTestRsp members

    /// <summary>
    /// </summary>
protected:
    bool m_ChallengeIsSet;
    
};

} // namespace xrf::model

#endif /* ServTestRsp_H_ */
