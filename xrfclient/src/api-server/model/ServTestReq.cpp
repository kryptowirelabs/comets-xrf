/**
* XRFc Service test API
* XRFc service testing API 
*
* The version of the OpenAPI document: 1
* Contact: tolgaoa@vt.edu
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ServTestReq.h"
#include "Helpers.h"

#include <sstream>

namespace xrf::model
{

ServTestReq::ServTestReq()
{
    m_Certificate = "";
    m_CertificateIsSet = false;
    
}

void ServTestReq::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw xrf::helpers::ValidationException(msg.str());
    }
}

bool ServTestReq::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ServTestReq::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ServTestReq" : pathPrefix;

        
    return success;
}

bool ServTestReq::operator==(const ServTestReq& rhs) const
{
    return
    
    
    
    ((!certificateIsSet() && !rhs.certificateIsSet()) || (certificateIsSet() && rhs.certificateIsSet() && getCertificate() == rhs.getCertificate()))
    
    ;
}

bool ServTestReq::operator!=(const ServTestReq& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ServTestReq& o)
{
    j = nlohmann::json();
    if(o.certificateIsSet())
        j["certificate"] = o.m_Certificate;
    
}

void from_json(const nlohmann::json& j, ServTestReq& o)
{
    if(j.find("certificate") != j.end())
    {
        j.at("certificate").get_to(o.m_Certificate);
        o.m_CertificateIsSet = true;
    } 
    
}

std::string ServTestReq::getCertificate() const
{
    return m_Certificate;
}
void ServTestReq::setCertificate(std::string const& value)
{
    m_Certificate = value;
    m_CertificateIsSet = true;
}
bool ServTestReq::certificateIsSet() const
{
    return m_CertificateIsSet;
}
void ServTestReq::unsetCertificate()
{
    m_CertificateIsSet = false;
}


} // namespace xrf::model

